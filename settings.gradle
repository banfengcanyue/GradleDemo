import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}
dependencyResolutionManagement {
    //repositoriesMode设置构建中存储库的依赖模式
    //FAIL_ON_PROJECT_REPOS -> 默认设置,项目或插件中任何库的所有构建都可以触发报错。
    //比如如果在项目里面没有拉下来或者构建错误则直接报错，而不是再次去使用setting.gradle下去查找根存储库的声明

    // PREFER_PROJECT -> 优先使用项目声明的存储库，而非settings.gradle
    // 即多项目下，子项目或插件配置了自己的存储库，则忽略根settings.gradle下设置的存储库，即忽略下面这个 repositories
    // PREFER_SETTINGS ->忽略项目或者插件中直接声明的存储库，只使用settings.gradle，即只使用下面这个repositories里的
    // 具体见: https://docs.gradle.org/current/javadoc/org/gradle/api/initialization/resolve/RepositoriesMode.html
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
    }
}
rootProject.name = "GradleDemo"
include ':app'

// 编译发布插件时打开
include ':standalone-gradle-plugin'
// 本地使用此插件时打开
//includeBuild('standalone-gradle-plugin')
